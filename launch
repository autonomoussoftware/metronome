#!/bin/bash
#set -e
#set -o pipefail

<< LICENSE
The MIT License (MIT)

Copyright 2017 - 2018, Alchemy Limited, LLC.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
LICENSE

usage()
{
  cat <<- _EOM_
  Launch metronome to a local parity instance by default,
  overriding auction launch date, price and supply, if specified.

  By default, launch to a local clean ETH "dev chain" instance of parity.

  If --test is offered, it will connect to the New Alchemy test network and
  launch. Note you will need NA testnet ETH. Contact your SA for help.

  If --live is offered, it will connect to the default parity instance.

  usage: launch [-O | --owner <owner eth address> ] [-P | --pass <password> ] [--live | --test] [-p <parity host>]

_EOM_

}

source ./basescript

if [[ "$CHAIN" = "etc" ]]
  then
    if [[ $ISA_ENDTIME = 0 ]]
    then
      echo "Initial auction end time can not be 0 for etc chain"
      exit 1
    fi
fi

if [[ $OWNER_ADDRESS = 0x0 ]]
  then
    echo "Requires owner's address. Use -O or --owner."
    exit 1
fi

echo "About to launch Metronome, genesis time $AUCTION (`date -r $AUCTION`) to $DEST.."
if [[ $LOCAL = 1 ]] && [[ $TIMESCALE = 1 ]]
then
  echo "Running on local chain but realtime.. Can I suggest -t 1000?"
fi

read -p "Press enter to continue"

rm $CHAIN_DIR/const_launch.js 2>/dev/null

sleep 5

cat <<EOF > $CHAIN_DIR/const_launch.js
// File generated by deploy -- edits will get overwritten!

var PRICE = 2
var ONE = 1
var NUMTOKENS = $SUPPLY
var START = $AUCTION
var TIMESCALE = 1
var MINPRICE = 3300000000000
var OWNER_ADDRESS = '$OWNER_ADDRESS'
var OWNER_PASS = '$PASS'
var ISA_ENDTIME = '$ISA_ENDTIME'
EOF

currentTime=$(expr `date +%s` + 10)

echo "Genesis time=$AUCTION"
if [[ $CHAIN = "eth" ]] && [[ $LIVE = 1 ]] && [[ $AUCTION <  $currentTime ]]
then
  echo "Auction start time can not be past time in eth chain"
  exit 1
fi
geth attach $PARITY_URL --preload $CHAIN_DIR/metronome.js,$CHAIN_DIR/const_launch.js,js/common.js,$CHAIN_DIR/launchMetronome.js$SEED


exit 0
